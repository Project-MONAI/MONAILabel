name: weekly-preview

on:
  push:
    branches: [ aihsani/weekly_build_fix_2 ]

jobs:
  packaging:
    if: github.repository == 'Project-MONAI/MONAILabel'
    runs-on: ubuntu-latest
    env:
      DEV_RELEASE_VERSION: 0.2
    steps:
    - uses: actions/checkout@v2
      with:
        ref: main
        fetch-depth: 0
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version:  3.8
    - name: Install setuptools
      run: |
        python -m pip install --user --upgrade setuptools wheel
    # - name: Build OHIF
    #   run: |
    #     root_dir=$PWD
    #     echo "Root: ${root_dir}"
        
    #     echo "cp -R ${root_dir}/plugins/ohif .."
    #     cp -R plugins/ohif ..
        
    #     echo "ls .. -l"
    #     ls .. -l

    #     echo "cd ../static/ohif"
    #     mkdir -p ../static/ohif
        
    #     ./build.sh ../static/ohif
        
    #     cd $root_dir
    #     cp -R ../static/ohif/Viewers/platform/viewer/dist ./plugins/OHIF/Viewers/platform/viewer/dist
    - name: Build distribution
      run: |
        export BUILD_OHIF=true
        export HEAD_COMMIT_ID=$(git rev-parse HEAD)
        sed -i 's/name\ =\ monailabel$/name\ =\ monailabel-weekly/g' setup.cfg
        echo "__commit_id__ = \"$HEAD_COMMIT_ID\"" >> monailabel/__init__.py
        git diff setup.cfg monailabel/__init__.py
        git config user.name "CI Builder"
        git config user.email "monai.contact@gmail.com"
        git add setup.cfg monailabel/__init__.py
        git commit -m "Weekly build at $HEAD_COMMIT_ID"
        export YEAR_WEEK=$(date +'%y%U')
        echo "Year week for tag is ${YEAR_WEEK}"
        if ! [[ $YEAR_WEEK =~ ^[0-9]{4}$ ]] ; then echo "Wrong 'year week' format.  Should be 4 digits."; exit 1 ; fi
        git tag "$DEV_RELEASE_VERSION.dev${YEAR_WEEK}"
        git log -1
        git tag --list
        git status
        python setup.py sdist bdist_wheel
        git status
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_TOKEN }}
