# Copyright (c) MONAI Consortium
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#     http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: docker
on:
  schedule:
    - cron: "0 2 * * 0"  # 02:00 of every Sunday
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag name to publish'
        required: true
        default: 'latest'

jobs:
  docker_build:
    if: github.repository == 'Project-MONAI/MONAILabel'
    runs-on: ubuntu-latest
    env:
      MONAI_ZOO_AUTH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: clean up
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
      - name: Build
        run: |
          ./runtests.sh --clean
          docker system prune -f
          DOCKER_BUILDKIT=1 docker build -t projectmonai/monailabel:${{ github.event.inputs.tag || 'latest'  }} -f Dockerfile .
      - name: Verify
        run: |
          ./runtests.sh --clean
          docker run --rm -i --ipc=host --net=host -v $(pwd):/workspace projectmonai/monailabel:${{ github.event.inputs.tag || 'latest'  }} /workspace/runtests.sh --net
      - name: Publish
        run: |
          echo "${{ secrets.DOCKER_PW }}" | docker login -u projectmonai --password-stdin
          docker push projectmonai/monailabel:${{ github.event.inputs.tag || 'latest' }}
          docker logout
          docker image prune -f
