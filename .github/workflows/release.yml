name: release
# generating and testing package artifacts from the main branch

on:
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  packaging:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache for pip
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            ~/.cache/pip
            ~/.cache/torch
          key: ${{ runner.os }}-pip-${{ steps.pip-cache.outputs.datew }}
      - name: Install dependencies
        run: |
          python -m pip install --user --upgrade pip setuptools wheel twine
          python -m pip install torch>=1.5 torchvision
      - name: Build and test source archive and wheel file
        run: |
          root_dir=$PWD
          echo "$root_dir"

          # build tar.gz and wheel
          python setup.py check -m -s
          python setup.py sdist bdist_wheel
          python -m twine check dist/*

          # move packages to a temp dir
          tmp_dir=$(mktemp -d)
          cp dist/monailabel* "$tmp_dir"
          rm -r build dist monailabel.egg-info
          cd "$tmp_dir"
          ls -al

          # install from wheel
          python -m pip install monailabel*.whl
          python -c 'import monailabel; monailabel.print_config()' 2>&1 | grep -iv "unknown"
          python -c 'import monailabel; print(monailabel.__file__)'
          python -m pip uninstall -y monailabel
          rm monailabel*.whl

          # install from tar.gz
          name=$(ls *.tar.gz | head -n1)
          echo $name
          python -m pip install $name
          python -c 'import monailabel; monailabel.print_config()' 2>&1 | grep -iv "unknown"
          python -c 'import monailabel; print(monailabel.__file__)'

          # install test utilities
          python -m pip install pytest

          # start the monailabel server in the background
          # and run the integration tests
          $root_dir/runtests.sh --net
        env:
          shell: bash

      - if: matrix.python-version == '3.8' && startsWith(github.ref, 'refs/tags/')
        name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: dist/

      - if: matrix.python-version == '3.8' && startsWith(github.ref, 'refs/tags/')
        name: Check artifacts
        run: |
          ls -al dist/
          rm dist/monai*.tar.gz
          ls -al dist/

      - if: matrix.python-version == '3.8' && startsWith(github.ref, 'refs/tags/')
        name: Publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
    
  versioning:
    if: github.repository == 'Project-MONAI/MONAILabel'
    needs: packaging
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        # full history so that we can git describe
        with:
          ref: main
          fetch-depth: 0
      - shell: bash
        run: |
          git describe
          python setup.py build
          cat build/lib/monailabel/_version.py
      - name: Upload version
        uses: actions/upload-artifact@v2
        with:
          name: _version.py
          path: build/lib/monailabel/_version.py
      - name: Clean up directory
        shell: bash
        run: |
          ls -al
          rm -rf {*,.[^.]*}
