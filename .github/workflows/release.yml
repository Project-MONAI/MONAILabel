name: release
# generating and testing package artifacts from the main branch

on:
  release:
    types: [ edited, published ]
    tags-ignore:
      - data
  workflow_dispatch:

jobs:
  packaging:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.6, 3.7, 3.8, 3.9 ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache for pip
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            ~/.cache/pip
            ~/.cache/torch
          key: ${{ runner.os }}-pip-${{ steps.pip-cache.outputs.datew }}
      - name: Install dependencies
        run: |
          python -m pip install --user --upgrade pip setuptools wheel
          python -m pip install torch>=1.5 torchvision
      - name: Build Package
        run: |
          python setup.py sdist bdist_wheel --build-number $(date +'%Y%m%d%H%M')
      - name: Verify Package
        run: |
          tmp_dir=$(mktemp -d)
          cp dist/monailabel* "$tmp_dir"
          rm -r build monailabel*.egg-info

          # install from tar.gz
          python -m pip install "$tmp_dir"/monailabel*.tar.gz
          python -c 'import monailabel; monailabel.print_config()' 2>&1 | grep -iv "unknown"
          python -c 'import monailabel; print(monailabel.__file__)'
          python -m pip uninstall -y monailabel

          # install from wheel
          python -m pip install "$tmp_dir"/monailabel*.whl
          python -c 'import monailabel; monailabel.print_config()' 2>&1 | grep -iv "unknown"
          python -c 'import monailabel; print(monailabel.__file__)'

          # install test utilities
          python -m pip install pytest

          # start the monailabel server in the background and run the integration tests
          ./runtests.sh --net

          # cleanup
          python -m pip uninstall -y monailabel
          rm -r "$tmp_dir"
        env:
          shell: bash

      - if: matrix.python-version == '3.8' && startsWith(github.ref, 'refs/tags/')
        name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: dist/

      - if: matrix.python-version == '3.8' && startsWith(github.ref, 'refs/tags/')
        name: Check artifacts
        run: |
          rm dist/monai*.tar.gz

      - if: matrix.python-version == '3.8' && startsWith(github.ref, 'refs/tags/')
        name: Publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
